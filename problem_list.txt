1. given two numbers x and y multiply these numbers and print the output

	problem:
	def problemOne(x, y):

	solution:

	def problemOne(x, y):
		print(x * y)


2. given two numbers x and y add these numbers and print the output

	problem:
	def problemTwo(x, y):

	solution:

	def problemTwo(x, y):
		print(x + y)


3. given a string s print each character of the string

	problem:
	def problemThree(s):

	solution:

	def problemThree(s):
		for i in s:
			print(i)


4. check if the list contains the number that is passed through the parameters and return True if it contains the number and False otherwise

	problem:
	def problemFour(list, number):

	solution 1:

	def problemFour(list, number):
		return list.contains(number)
		
	solution 2:

	def problemFour(list, number):
		answer = False
		for num in list:
			if num == number:
				return True

		return answer

5. given a list of numbers print out all the numbers that are divisible by 5
	
	problem:
	def problemFive(list):

	solution 1:
	
	def problemFive(list):
		for number in list:
			if number % 5 == 0:
				print(number)

6. Given a number return True if the number is a palindrome

	problem:

	def problemSix(number):

	solution 1:
	
	def problemSix(number):

		reverse_number = 0
		original_number = number 
		while number > 0:
			reminder = number % 10
			reverse_number = (reverse_number * 10) + reminder
			number = number // 10

		if reverse_number == original_number:
			return True
		else:
			return False
	
	solution 2:
		
	def problemSix(number):
		if str(number.reverse()) == str(number):
			return True

7. Given a string 'Bob') return "hello Bob Bob"

	problem:

	def problemSeven(str):
	

	solution 1:

	def problemSeven(str):
		return f"Hello {str} {str}" 

	
	solution 2:
	def problemSeven(str):
		return "Hello " + str + " " + str
	
8. Given two lists listOne and listTwo, find out numbers divisible by 3 from both list and return these as a new list

	problem:

	def problemEight(listOne, listTwo):
		newList = []

		for num in listOne:
			if num % 3 == 0:
				newList.append(num)

		for num in listTwo:
			if num % 3 == 0:
				newList.append(num)

		return newList


9. Given a string str, create a new string with the first ane last character from str and return this

	problem:

	def problemNine(str):

	solution:

	def problemNine(str):
		newString = str[0] + str[-1]
		return newString


10. Given a string str and a character char, count the number of occurences of char in str and return the result

	problem:

	def problemTen(str, char):


	solution:

	def problemTen(str, char):
		count = 0
		for c in str:
			if c == char:
				count+=1
		return count
